{"id":"node_modules/snabbdom/src/package/modules/class.ts","dependencies":[{"name":"E:\\tanwan-file\\tool-library\\virtual-dom\\snabbdom\\package.json","includedInParent":true,"mtime":1595993582237},{"name":"E:\\tanwan-file\\tool-library\\.browserslistrc","includedInParent":true,"mtime":1586828216661},{"name":"E:\\tanwan-file\\tool-library\\virtual-dom\\snabbdom\\node_modules\\snabbdom\\package.json","includedInParent":true,"mtime":1595994164182}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.classModule = void 0;\r\nfunction updateClass(oldVnode, vnode) {\r\n    var cur;\r\n    var name;\r\n    var elm = vnode.elm;\r\n    var oldClass = oldVnode.data.class;\r\n    var klass = vnode.data.class;\r\n    if (!oldClass && !klass)\r\n        return;\r\n    if (oldClass === klass)\r\n        return;\r\n    oldClass = oldClass || {};\r\n    klass = klass || {};\r\n    for (name in oldClass) {\r\n        if (oldClass[name] &&\r\n            !Object.prototype.hasOwnProperty.call(klass, name)) {\r\n            // was `true` and now not provided\r\n            elm.classList.remove(name);\r\n        }\r\n    }\r\n    for (name in klass) {\r\n        cur = klass[name];\r\n        if (cur !== oldClass[name]) {\r\n            elm.classList[cur ? 'add' : 'remove'](name);\r\n        }\r\n    }\r\n}\r\nexports.classModule = { create: updateClass, update: updateClass };\r\n"},"sourceMaps":{"js":{"version":3,"file":"class.js","sourceRoot":"","sources":["node_modules/snabbdom/src/package/modules/class.ts"],"names":[],"mappings":";;;AAKA,SAAS,WAAW,CAAE,QAAe,EAAE,KAAY;IACjD,IAAI,GAAQ,CAAA;IACZ,IAAI,IAAY,CAAA;IAChB,IAAI,GAAG,GAAY,KAAK,CAAC,GAAc,CAAA;IACvC,IAAI,QAAQ,GAAI,QAAQ,CAAC,IAAkB,CAAC,KAAK,CAAA;IACjD,IAAI,KAAK,GAAI,KAAK,CAAC,IAAkB,CAAC,KAAK,CAAA;IAE3C,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK;QAAE,OAAM;IAC/B,IAAI,QAAQ,KAAK,KAAK;QAAE,OAAM;IAC9B,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAA;IACzB,KAAK,GAAG,KAAK,IAAI,EAAE,CAAA;IAEnB,KAAK,IAAI,IAAI,QAAQ,EAAE;QACrB,IACE,QAAQ,CAAC,IAAI,CAAC;YACd,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAClD;YACA,kCAAkC;YAClC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;SAC3B;KACF;IACD,KAAK,IAAI,IAAI,KAAK,EAAE;QAClB,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,CAAA;QACjB,IAAI,GAAG,KAAK,QAAQ,CAAC,IAAI,CAAC,EAAE;YACzB,GAAG,CAAC,SAAiB,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAA;SACrD;KACF;AACH,CAAC;AAEY,QAAA,WAAW,GAAW,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,WAAW,EAAE,CAAA","sourcesContent":["import { VNode, VNodeData } from '../vnode'\nimport { Module } from './module'\n\nexport type Classes = Record<string, boolean>\n\nfunction updateClass (oldVnode: VNode, vnode: VNode): void {\n  var cur: any\n  var name: string\n  var elm: Element = vnode.elm as Element\n  var oldClass = (oldVnode.data as VNodeData).class\n  var klass = (vnode.data as VNodeData).class\n\n  if (!oldClass && !klass) return\n  if (oldClass === klass) return\n  oldClass = oldClass || {}\n  klass = klass || {}\n\n  for (name in oldClass) {\n    if (\n      oldClass[name] &&\n      !Object.prototype.hasOwnProperty.call(klass, name)\n    ) {\n      // was `true` and now not provided\n      elm.classList.remove(name)\n    }\n  }\n  for (name in klass) {\n    cur = klass[name]\n    if (cur !== oldClass[name]) {\n      (elm.classList as any)[cur ? 'add' : 'remove'](name)\n    }\n  }\n}\n\nexport const classModule: Module = { create: updateClass, update: updateClass }\n"]}},"error":null,"hash":"1b04ff42add1f80bfd8bb76fb30188d9","cacheData":{"env":{}}}